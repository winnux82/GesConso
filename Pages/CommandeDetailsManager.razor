@*@page "/commandedetails"*@
@page "/commandedetails/{id}"
@inject StateContainer StateContainer
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject IToastService ToastService
@*@using System*@


<PageTitle>Détails des commandes</PageTitle>
<BlazoredToasts />

<h1>Détails des commandes</h1>

@*<button class="btn btn-primary" @onclick="NewCommande"><i class="oi oi-plus"></i> Nouvelle Commande</button>
*@

<div class="row">
    <div class="col-md-6">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Commande</th>
                    @*<th>ID_Date</th>*@
                    <th>Date de la Commande</th>
                    <th>Prix Htva</th>
                    <th>Prix TvaC</th>
                    <th>Date Delete</th>
                    <th>Détails</th>

                </tr>
            </thead>
            <tbody>
                @foreach (Commande commande in StateContainer.Commandes)
                {
                    var isSelected = StateContainer.SelectedCommande?.Equals(commande) ?? false;
                    var style = isSelected ? "box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); border: 1px solid #333; color: white; background-color: #337ab7;" : string.Empty;



                    <tr @onclick="(() => SelectCommande(commande))" style="@style">
                        <td>@commande.Id</td>
                        <td>
                            @if (commande.Id_Date != null)
                            {
                                @(((DateTime)commande.Id_Date).ToString("yyyyMMdd"))
                            }
                        </td>

                        @*<td>@commande.Id_Date</td>*@
                        <td>@commande.DateCommande</td>
                        <td>@commande.PrixHtva €</td>
                        <td>@commande.PrixTvaC €</td>
                        <td>@commande.DeletedAt</td>
                        <td><button type="button" class="btn btn-primary" @onclick="VoirDetails"><i class="oi oi-plus"></i> Voir les détails</button></td>

                    </tr>

                }

            </tbody>
        </table>
    </div>

</div>

@code {
    Commande commande = new Commande();
    private Commande? selected = null;

    [Parameter]
    public Action? OnCommandeSelected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetCommandes();
    }

    public async Task GetCommandes()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, $"{NavigationManager.BaseUri}api/commande/getall");

        using (var response = await HttpClient.SendAsync(request))
        {
            if (response.IsSuccessStatusCode)
            {
                var commandes = await response.Content.ReadFromJsonAsync<List<Commande>>();

                if (commandes != null)
                {
                    StateContainer.Commandes = commandes;
                    await InvokeAsync(StateHasChanged);
                }
            }
        }
    }

    private void VoirDetails()
    {
        if (selected != null)
        {
            Guid? commandeIdNullable = selected.Id;
            if (commandeIdNullable.HasValue)
            {
                Guid commandeId = (Guid)commandeIdNullable;
                string commandeDetailsUrl = $"/commandedetails/{commandeId}";

                NavigationManager.NavigateTo(commandeDetailsUrl);
            }
        }
    }



    // Selectionner une commande
    private void SelectCommande(Commande comm)
    {
        StateContainer.SelectedCommande = comm;
        selected = comm;
        commande = comm;
    }



}
